# ===============================
# Grafana Deployment & Service & Ingress
# ===============================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.1.2
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: "Viewer"
          envFrom:
            - secretRef:
                name: platform-secrets
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 10
          volumeMounts:
          - name: shared
            mountPath: /var/lib/grafana
            subPath: grafana
      volumes:
        - name: shared
          persistentVolumeClaim:
            claimName: shared-pvc


---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: platform
spec:
  type: NodePort 
  selector:
    app: grafana
  ports:
    - port: 80
      targetPort: 3000
      nodePort: 32000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: platform
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - monitor.mlflow.gokuladethya.uk
      secretName: monitor-tls
  rules:
    - host: monitor.mlflow.gokuladethya.uk
      http:
        paths:
          - path: /grafana
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource
  namespace: platform
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus.platform.svc:9090
        isDefault: true
