apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  namespace: platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
    spec:
      containers:
        - name: mlflow
          image: python:3.11-slim
          command: ["bash", "-c"]
          args: |
            pip install --no-cache-dir mlflow psycopg2-binary boto3 &&

            # start mlflow with auth enabled
            mlflow server \
              --backend-store-uri $DATABASE_URL \
              --default-artifact-root $S3_URL/ml-flow \
              --host 0.0.0.0 \
              --port 5000 \
              --workers 1 \
              --app-name basic-auth &

            # wait for mlflow to start
            sleep 30

            # create admin + public user
            python <<'PYCODE'
import os, time
from mlflow.server.auth.client import AuthServiceClient

tracking_uri = "http://127.0.0.1:5000"

admin_user = os.environ["MLFLOW_ADMIN_USERNAME"]
admin_pass = os.environ["MLFLOW_ADMIN_PASSWORD"]
public_user = os.environ["MLFLOW_PUBLIC_USERNAME"]
public_pass = os.environ["MLFLOW_PUBLIC_PASSWORD"]

client = AuthServiceClient(tracking_uri, username="admin", password="password1234")

# create admin
try:
    client.create_user(username=admin_user, password=admin_pass)
    client.assign_role(admin_user, "ADMIN")
except Exception as e:
    print("Admin creation skipped:", e)

# create readonly user
try:
    client.create_user(username=public_user, password=public_pass)
    client.assign_role(public_user, "READ_ONLY")
except Exception as e:
    print("Readonly creation skipped:", e)

print("✅ Users initialized")
client.delete_user("admin")
print("✅ Default admin user deleted")
PYCODE

            wait -n

          ports:
            - containerPort: 5000
          envFrom:
            - secretRef:
                name: platform-secrets
          volumeMounts:
            - name: shared
              mountPath: /mlflow
      volumes:
        - name: shared
          persistentVolumeClaim:
            claimName: shared-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow
  namespace: platform
spec:
  type: NodePort 
  selector:
    app: mlflow
  ports:
    - port: 5000
      targetPort: 5000
      nodePort: 30050
